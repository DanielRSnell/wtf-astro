---
import Layout from './base.astro';
import { ReviewHero } from '../components/review-hero.tsx';
import type { CollectionEntry } from 'astro:content';

export interface Props {
  resource: CollectionEntry<'wordpress-resource'>;
  categoryName?: string;
}

const { resource, categoryName = "WordPress" } = Astro.props;
const { Content } = await resource.render();

// Calculate overall rating
const overallRating = resource.data.ratings && resource.data.ratings.length > 0
  ? resource.data.ratings.reduce((sum, r) => sum + r.value, 0) / resource.data.ratings.length
  : 0;

// Get review status specific content
const isComplete = resource.data.review_status === 'complete';
const isActive = resource.data.review_status === 'active';
const isBacklog = resource.data.review_status === 'backlog';
const isSkip = resource.data.review_status === 'skip';
---

<Layout title={`${resource.data.title} - ${categoryName}`} description={resource.data.description}>
  {/* Review Hero Section */}
  <ReviewHero
    client:load
    data-theme="bright-dark"
    title={resource.data.title}
    subtitle={resource.data.subtitle}
    description={resource.data.description}
    overallRating={overallRating}
    publishDate={resource.data.metadata?.publishDate?.toLocaleDateString()}
    author={resource.data.metadata?.author}
    badge={resource.data.badge}
    ratings={resource.data.ratings || []}
    alignment="left"
  />

  <article class="bg-background text-foreground" data-theme="bright-dark">
    <div class="container max-w-4xl mx-auto px-6 py-12">
      
      {/* Review Status Notice */}
      {!isComplete && (
        <div class={`mb-8 p-6 rounded-2xl border ${
          isActive ? 'bg-blue-500/5 border-blue-500/20' :
          isBacklog ? 'bg-yellow-500/5 border-yellow-500/20' :
          isSkip ? 'bg-red-500/5 border-red-500/20' :
          'bg-muted/5 border-border'
        }`}>
          <h2 class={`text-lg font-semibold mb-2 ${
            isActive ? 'text-blue-400' :
            isBacklog ? 'text-yellow-400' :
            isSkip ? 'text-red-400' :
            'text-foreground'
          }`}>
            {isActive && 'Review In Progress'}
            {isBacklog && 'Review Pending'}
            {isSkip && 'Review Not Planned'}
          </h2>
          
          {resource.data.review_reason && (
            <p class="text-muted-foreground mb-4">{resource.data.review_reason}</p>
          )}
          
          {/* Testing Progress for Active Reviews */}
          {isActive && resource.data.testing_progress && (
            <div class="space-y-4">
              <div class="flex items-center justify-between text-sm">
                <span class="text-muted-foreground">Progress</span>
                <span class="font-medium text-foreground">{resource.data.testing_progress.completion}%</span>
              </div>
              <div class="w-full bg-muted/20 rounded-full h-2">
                <div 
                  class="bg-primary h-2 rounded-full transition-all duration-500"
                  style={`width: ${resource.data.testing_progress.completion}%`}
                />
              </div>
              {resource.data.testing_progress.current_phase && (
                <p class="text-sm text-muted-foreground">
                  Current Phase: <span class="text-foreground">{resource.data.testing_progress.current_phase}</span>
                </p>
              )}
            </div>
          )}
          
          {/* Subscribe CTA */}
          {(isBacklog || isActive) && resource.data.subscribe_cta && (
            <div class="mt-6 p-4 bg-primary/5 rounded-xl">
              <p class="text-sm text-foreground mb-3">{resource.data.subscribe_cta}</p>
              <button class="px-4 py-2 bg-primary text-primary-foreground rounded-lg text-sm font-medium hover:bg-primary/90 transition-colors">
                Get Notified
              </button>
            </div>
          )}
        </div>
      )}

      {/* MDX Content */}
      <div class="prose prose-lg max-w-none prose-headings:text-foreground prose-p:text-muted-foreground prose-strong:text-foreground prose-a:text-primary hover:prose-a:text-primary/80">
        <Content />
      </div>

      {/* Pros and Cons */}
      {(resource.data.pros || resource.data.cons) && (
        <div class="grid md:grid-cols-2 gap-8 mt-12">
          {resource.data.pros && (
            <div class="bg-green-500/5 border border-green-500/20 rounded-2xl p-6">
              <h3 class="text-lg font-semibold text-green-400 mb-4">Pros</h3>
              <ul class="space-y-2">
                {resource.data.pros.map((pro: string) => (
                  <li class="flex items-start gap-2 text-sm text-foreground">
                    <svg class="w-4 h-4 text-green-400 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                    {pro}
                  </li>
                ))}
              </ul>
            </div>
          )}

          {resource.data.cons && (
            <div class="bg-red-500/5 border border-red-500/20 rounded-2xl p-6">
              <h3 class="text-lg font-semibold text-red-400 mb-4">Cons</h3>
              <ul class="space-y-2">
                {resource.data.cons.map((con: string) => (
                  <li class="flex items-start gap-2 text-sm text-foreground">
                    <svg class="w-4 h-4 text-red-400 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                    {con}
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>
      )}

      {/* Pricing Plans */}
      {resource.data.pricingPlans && resource.data.pricingPlans.length > 0 ? (
        <div class="mt-12">
          <h3 class="text-2xl font-bold text-foreground mb-6">Pricing Plans</h3>
          <div class={`grid gap-6 ${resource.data.pricingPlans.length === 1 ? 'md:grid-cols-1 max-w-md mx-auto' : resource.data.pricingPlans.length === 2 ? 'md:grid-cols-2' : 'md:grid-cols-3'}`}>
            {resource.data.pricingPlans.map((plan) => (
              <div class={`relative overflow-hidden rounded-2xl bg-card/60 backdrop-blur-xl border ${plan.recommended ? 'border-primary/30' : 'border-border/20'} p-6 hover:border-primary/40 transition-all duration-300`}>
                {/* Recommended Badge */}
                {plan.recommended && (
                  <div class="absolute top-0 right-0 bg-primary text-primary-foreground px-3 py-1 rounded-bl-xl text-xs font-semibold">
                    RECOMMENDED
                  </div>
                )}
                
                {/* Plan Badge */}
                {plan.badge && (
                  <div class="inline-flex items-center gap-2 rounded-full bg-primary/10 px-3 py-1 mb-4">
                    <span class="text-xs font-medium text-primary">{plan.badge}</span>
                  </div>
                )}
                
                {/* Plan Name */}
                <h4 class="text-lg font-semibold text-foreground mb-2">{plan.name}</h4>
                
                {/* Price */}
                <div class="mb-4">
                  <span class="text-3xl font-bold text-primary">{plan.price}</span>
                  {plan.billingCycle && (
                    <span class="text-sm text-muted-foreground ml-1">/{plan.billingCycle}</span>
                  )}
                </div>
                
                {/* Features */}
                <ul class="space-y-2 mb-6">
                  {plan.features.map((feature: string) => (
                    <li class="flex items-start gap-2 text-sm text-foreground">
                      <svg class="w-4 h-4 text-primary mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                      </svg>
                      {feature}
                    </li>
                  ))}
                </ul>
                
                {/* CTA Button */}
                {plan.href && (
                  <a 
                    href={plan.href}
                    class={`block w-full text-center px-4 py-2 rounded-lg font-medium transition-colors ${
                      plan.recommended 
                        ? 'bg-primary text-primary-foreground hover:bg-primary/90' 
                        : 'bg-card border border-border hover:bg-muted'
                    }`}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    Get Started
                  </a>
                )}
              </div>
            ))}
          </div>
        </div>
      ) : resource.data.pricing && (
        <div class="bg-card/60 backdrop-blur-xl border border-border/30 rounded-2xl p-6 mt-8">
          <h3 class="text-lg font-semibold text-foreground mb-4">Pricing</h3>
          <div class="space-y-2">
            <div class="flex items-center justify-between">
              <span class="text-sm text-muted-foreground">Free Version</span>
              <span class="text-sm font-medium text-foreground">
                {resource.data.pricing.free ? 'Available' : 'Not Available'}
              </span>
            </div>
            {resource.data.pricing.startingPrice && (
              <div class="flex items-center justify-between">
                <span class="text-sm text-muted-foreground">Starting Price</span>
                <span class="text-sm font-medium text-primary">{resource.data.pricing.startingPrice}</span>
              </div>
            )}
            {resource.data.pricing.priceNote && (
              <p class="text-xs text-muted-foreground mt-2">{resource.data.pricing.priceNote}</p>
            )}
          </div>
        </div>
      )}

      {/* CTA Button */}
      {resource.data.href && (
        <div class="flex gap-4 mt-8">
          <a 
            href={resource.data.href}
            class="inline-flex items-center gap-2 px-6 py-3 bg-primary text-primary-foreground rounded-xl font-medium hover:bg-primary/90 transition-colors"
            target="_blank"
            rel="noopener noreferrer"
          >
            Visit {resource.data.title}
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
            </svg>
          </a>
        </div>
      )}
    </div>
  </article>
</Layout>