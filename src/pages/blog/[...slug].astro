---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/base.astro';
import { Blogpost4 } from '../../components/blogpost4.tsx';
import { ShareButtons } from '../../components/ShareButtons.tsx';
import { ScrollToTop } from '../../components/ScrollToTop.tsx';
import { TableOfContents } from '../../components/TableOfContents.tsx';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Format date for display
const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(entry.data.date);

// Create breadcrumb items
const breadcrumbItems = [
  { label: 'Home', href: '/' },
  { label: 'Blog', href: '/blog' },
  { label: entry.data.title, href: `/blog/${entry.slug}` }
];
---

<Layout title={entry.data.title}>
  <section class="bg-background py-32 text-foreground min-h-screen" data-theme="bright-dark">
    <div class="container">
      <!-- Breadcrumbs -->
      <nav aria-label="breadcrumb" class="mb-8">
        <ol class="flex items-center space-x-2 text-sm text-muted-foreground">
          <li><a href="/" class="hover:text-primary">Home</a></li>
          <li class="before:content-['/'] before:mx-2">
            <a href="/blog" class="hover:text-primary">Blog</a>
          </li>
          <li class="before:content-['/'] before:mx-2 text-foreground">{entry.data.title}</li>
        </ol>
      </nav>
      
      <!-- Featured image if available -->
      {entry.data.image && (
        <div class="relative mt-8 mb-8 h-64 md:h-96 overflow-hidden rounded-2xl">
          <img 
            src={entry.data.image.src} 
            alt={entry.data.image.alt}
            class="w-full h-full object-cover"
transition:name={`blog-image-${entry.slug}`}
          />
          <div class="absolute inset-0 bg-gradient-to-t from-black/50 via-black/20 to-transparent"></div>
        </div>
      )}
      
      <!-- Title and description -->
      <h1 class="mb-6 mt-7 max-w-4xl text-3xl font-semibold md:text-5xl leading-tight" transition:name={`blog-title-${entry.slug}`}>
        {entry.data.title}
      </h1>
      
      {entry.data.description && (
        <p class="mb-8 max-w-3xl text-lg text-muted-foreground leading-relaxed">
          {entry.data.description}
        </p>
      )}
      
      <!-- Metadata -->
      <div class="flex flex-wrap items-center gap-4 text-sm mb-4">
        <div class="flex items-center gap-3">
          <img 
            src={`https://api.dicebear.com/7.x/initials/svg?seed=${entry.data.author}`}
            alt={entry.data.author}
            class="h-8 w-8 rounded-full border"
          />
          <span>
            <span class="font-medium">{entry.data.author}</span>
            <span class="text-muted-foreground ml-1">on {formattedDate}</span>
          </span>
        </div>

        <span class="text-muted-foreground flex items-center gap-1">
          <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <circle cx="12" cy="12" r="10"></circle>
            <polyline points="12,6 12,12 16,14"></polyline>
          </svg>
          {entry.data.readTime || 5} min. read
        </span>
        
        <div class="inline-flex h-8 w-8 items-center justify-center rounded-lg bg-primary/10 backdrop-blur-sm border border-primary/20">
          <div class="h-2 w-2 rounded-full bg-primary"></div>
        </div>
        <span class="text-xs font-medium text-primary uppercase tracking-widest">
          {entry.data.category.charAt(0).toUpperCase() + entry.data.category.slice(1).replace('-', ' ')}
        </span>
      </div>
      
      <!-- Tags -->
      {entry.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-8">
          {entry.data.tags.map((tag) => (
            <span key={tag} class="inline-flex items-center rounded-full bg-muted/50 px-3 py-1 text-xs font-medium text-muted-foreground">
              #{tag}
            </span>
          ))}
        </div>
      )}
      
      <hr class="border-border/20 mb-16 mt-8" />
      
      <!-- Content Layout -->
      <div class="flex flex-col lg:flex-row gap-8">
        <div class="flex-1 lg:w-3/4">
          <div class="prose prose-lg prose-invert max-w-none">
            <style>
              .prose p code,
              .prose li code,
              .prose td code,
              .prose th code,
              .prose h1 code,
              .prose h2 code,
              .prose h3 code,
              .prose h4 code,
              .prose h5 code,
              .prose h6 code {
                background-color: #22c55e !important;
                color: #000000 !important;
                padding: 0.125rem 0.375rem !important;
                border-radius: 0.375rem !important;
                font-size: 0.875rem !important;
                font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace !important;
                font-weight: 600 !important;
                border: none !important;
              }
              .prose pre {
                background-color: hsl(var(--card)) !important;
                border: 1px solid hsl(var(--border) / 0.2) !important;
                border-radius: 0.75rem !important;
                padding: 1rem !important;
              }
              .prose pre code {
                background: transparent !important;
                color: inherit !important;
                padding: 0 !important;
                border-radius: 0 !important;
                font-size: inherit !important;
                font-weight: inherit !important;
              }
            </style>
            <Content />
          </div>
        </div>
        
        <aside class="w-full lg:w-1/4">
          <div class="lg:sticky lg:top-8 space-y-6 max-h-screen overflow-auto">
            <TableOfContents client:only="react" content={entry.body} />
            
            <div class="rounded-2xl bg-card/60 backdrop-blur-xl border border-border/20 p-6">
              <span class="text-lg font-medium">Share this article</span>
              <ShareButtons client:only="react" title={entry.data.title} />
            </div>
            
            <ScrollToTop client:only="react" />
          </div>
        </aside>
      </div>
    </div>
  </section>
</Layout>