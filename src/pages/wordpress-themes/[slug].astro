---
export const prerender = true;
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/base.astro';

export async function getStaticPaths() {
  const resources = await getCollection('wordpress-resource', (resource) => {
    return resource.data.category === 'themes';
  });
  
  return resources.map((resource) => ({
    params: { 
      slug: resource.data.slug 
    },
    props: { resource }
  }));
}

type Props = {
  resource: CollectionEntry<'wordpress-resource'>;
};

const { resource } = Astro.props;

// Safety check - return a 404 if resource is missing
if (!resource || !resource.data) {
  return Astro.redirect('/404');
}

// Get all blog posts first (with try-catch)
let allBlogPosts = [];
try {
  allBlogPosts = await getCollection('blog');
} catch (error) {
  console.error('Error loading blog posts:', error);
  allBlogPosts = [];
}

// Filter related blog posts for this specific theme
const relatedPosts = allBlogPosts.filter((post) => {
  if (!post?.data || !resource?.data) return false;
  
  try {
    const themeName = resource.data.title.toLowerCase();
    return post.data.tags?.some(tag => 
      tag.toLowerCase().includes(themeName) ||
      tag.toLowerCase().includes('theme')
    ) || post.data.title?.toLowerCase().includes(themeName);
  } catch (error) {
    console.error('Error filtering posts:', error);
    return false;
  }
});

// Separate posts by type (with safety checks)
const guides = relatedPosts.filter(post => 
  post?.data?.tags?.some(tag => tag.toLowerCase().includes('guide')) ||
  post?.data?.category === 'guides'
);

const reviews = relatedPosts.filter(post => 
  post?.data?.tags?.some(tag => tag.toLowerCase().includes('review')) ||
  post?.data?.category === 'reviews'
);

const tutorials = relatedPosts.filter(post => 
  post?.data?.tags?.some(tag => tag.toLowerCase().includes('tutorial')) ||
  post?.data?.category === 'tutorials'
);
---

<Layout title={resource.data.title} description={resource.data.description}>
  <article class="bg-background text-foreground" data-theme="bright-dark">
    <div class="container max-w-4xl mx-auto px-6 py-32">
      {/* Header */}
      <header class="mb-12">
        <div class="flex items-center gap-2 mb-4">
          <span class="text-sm text-muted-foreground capitalize">
            WordPress › {resource.data.category}
          </span>
          {resource.data.badge && (
            <span class="inline-flex items-center gap-1 px-2 py-1 rounded-full bg-primary/10 text-primary text-xs font-medium">
              <div class="w-1 h-1 rounded-full bg-primary" />
              {resource.data.badge}
            </span>
          )}
        </div>
        
        <h1 class="text-4xl md:text-5xl font-bold text-foreground mb-4">
          {resource.data.title}
        </h1>
        
        {resource.data.subtitle && (
          <p class="text-xl text-muted-foreground mb-6">
            {resource.data.subtitle}
          </p>
        )}
        
        <p class="text-lg text-muted-foreground leading-relaxed mb-8">
          {resource.data.description}
        </p>

        {/* Meta info */}
        <div class="flex items-center gap-4 text-sm text-muted-foreground mb-8">
          <span>By {resource.data.metadata.author}</span>
          <span>•</span>
          <span>{resource.data.metadata.publishDate.toLocaleDateString()}</span>
          {resource.data.metadata.readTime && (
            <>
              <span>•</span>
              <span>{resource.data.metadata.readTime} min read</span>
            </>
          )}
        </div>

        {/* Ratings */}
        {resource.data.ratings && (
          <div class="bg-card/60 backdrop-blur-xl border border-border/30 rounded-2xl p-6 mb-8">
            <h3 class="text-lg font-semibold text-foreground mb-4">Ratings</h3>
            <div class="grid gap-3">
              {resource.data.ratings.map((rating) => (
                <div class="flex items-center justify-between">
                  <span class="text-sm font-medium text-muted-foreground">{rating.name}</span>
                  <div class="flex items-center gap-2">
                    <div class="flex items-center">
                      {Array.from({ length: 5 }, (_, i) => (
                        <svg 
                          class={`w-4 h-4 ${i < Math.floor(rating.value) ? 'text-primary fill-current' : 'text-muted-foreground/30'}`}
                          fill="currentColor" 
                          viewBox="0 0 20 20"
                        >
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                        </svg>
                      ))}
                    </div>
                    <span class="text-sm text-foreground font-medium">{rating.value}/5</span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* CTA Button */}
        <div class="flex gap-4">
          <a 
            href={resource.data.href}
            class="inline-flex items-center gap-2 px-6 py-3 bg-primary text-primary-foreground rounded-xl font-medium hover:bg-primary/90 transition-colors"
            target="_blank"
            rel="noopener noreferrer"
          >
            Visit {resource.data.title}
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
            </svg>
          </a>
        </div>
      </header>

      {/* Content */}
      <div class="prose prose-lg max-w-none">
        <p class="text-lg text-muted-foreground leading-relaxed">
          {resource.data.description}
        </p>
      </div>

      {/* Pros and Cons */}
      {(resource.data.pros || resource.data.cons) && (
        <div class="grid md:grid-cols-2 gap-8 mt-12">
          {resource.data.pros && (
            <div class="bg-green-500/5 border border-green-500/20 rounded-2xl p-6">
              <h3 class="text-lg font-semibold text-green-400 mb-4">Pros</h3>
              <ul class="space-y-2">
                {resource.data.pros.map((pro) => (
                  <li class="flex items-start gap-2 text-sm text-foreground">
                    <svg class="w-4 h-4 text-green-400 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                    {pro}
                  </li>
                ))}
              </ul>
            </div>
          )}

          {resource.data.cons && (
            <div class="bg-red-500/5 border border-red-500/20 rounded-2xl p-6">
              <h3 class="text-lg font-semibold text-red-400 mb-4">Cons</h3>
              <ul class="space-y-2">
                {resource.data.cons.map((con) => (
                  <li class="flex items-start gap-2 text-sm text-foreground">
                    <svg class="w-4 h-4 text-red-400 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                    </svg>
                    {con}
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>
      )}

      {/* Pricing */}
      {resource.data.pricing && (
        <div class="bg-card/60 backdrop-blur-xl border border-border/30 rounded-2xl p-6 mt-8">
          <h3 class="text-lg font-semibold text-foreground mb-4">Pricing</h3>
          <div class="space-y-2">
            <div class="flex items-center justify-between">
              <span class="text-sm text-muted-foreground">Free Version</span>
              <span class="text-sm font-medium text-foreground">
                {resource.data.pricing.free ? 'Available' : 'Not Available'}
              </span>
            </div>
            {resource.data.pricing.startingPrice && (
              <div class="flex items-center justify-between">
                <span class="text-sm text-muted-foreground">Starting Price</span>
                <span class="text-sm font-medium text-primary">{resource.data.pricing.startingPrice}</span>
              </div>
            )}
            {resource.data.pricing.priceNote && (
              <p class="text-xs text-muted-foreground mt-2">{resource.data.pricing.priceNote}</p>
            )}
          </div>
        </div>
      )}

      {/* Related Content Section */}
      {(guides.length > 0 || reviews.length > 0 || tutorials.length > 0 || relatedPosts.length > 0) && (
        <div class="border-t border-border/20 mt-16 pt-16">
          <h2 class="text-3xl font-bold mb-8">Related Content & Guides</h2>
          
          {/* Content Type Navigation */}
          <div class="flex flex-wrap gap-2 mb-8">
            <a 
              href={`/wordpress-themes/${resource.data.slug}`}
              class="px-4 py-2 rounded-lg bg-primary text-primary-foreground text-sm font-medium"
            >
              Overview
            </a>
            {guides.length > 0 && (
              <a 
                href={`/wordpress-themes/${resource.data.slug}/guides`}
                class="px-4 py-2 rounded-lg bg-card/60 border border-brand text-foreground hover:bg-card/80 transition-colors text-sm font-medium"
              >
                Guides ({guides.length})
              </a>
            )}
            {tutorials.length > 0 && (
              <a 
                href={`/wordpress-themes/${resource.data.slug}/tutorials`}
                class="px-4 py-2 rounded-lg bg-card/60 border border-brand text-foreground hover:bg-card/80 transition-colors text-sm font-medium"
              >
                Tutorials ({tutorials.length})
              </a>
            )}
            {reviews.length > 0 && (
              <a 
                href={`/wordpress-themes/${resource.data.slug}/reviews`}
                class="px-4 py-2 rounded-lg bg-card/60 border border-brand text-foreground hover:bg-card/80 transition-colors text-sm font-medium"
              >
                Reviews ({reviews.length})
              </a>
            )}
          </div>

          {/* Recent Related Posts */}
          {relatedPosts.length > 0 && (
            <div>
              <h3 class="text-xl font-semibold mb-6">Latest {resource.data.title} Content</h3>
              <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                {relatedPosts.slice(0, 6).map((post) => (
                  <a
                    href={`/blog/${post.slug}`}
                    class="group relative overflow-hidden rounded-2xl bg-card/60 backdrop-blur-xl border border-brand hover:border-primary/30 transition-all duration-500 hover:shadow-2xl hover:shadow-primary/10 p-6 block"
                  >
                    <div class="relative z-10">
                      <div class="flex items-center gap-2 mb-3">
                        <span class="inline-flex items-center gap-1 px-2 py-1 rounded-full bg-primary/10 text-primary text-xs font-medium">
                          <div class="w-1 h-1 rounded-full bg-primary" />
                          {post.data.category}
                        </span>
                        <span class="text-xs text-muted-foreground">
                          {new Date(post.data.date).toLocaleDateString()}
                        </span>
                      </div>
                      
                      <h4 class="text-lg font-semibold text-foreground group-hover:text-primary transition-colors duration-300 mb-2">
                        {post.data.title}
                      </h4>
                      
                      <p class="text-sm text-muted-foreground mb-4 line-clamp-2">
                        {post.data.description}
                      </p>
                      
                      <div class="flex items-center justify-between text-xs text-muted-foreground">
                        <span>{post.data.readTime || 5} min read</span>
                        <svg class="w-4 h-4 group-hover:text-primary transition-colors duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                        </svg>
                      </div>
                    </div>
                  </a>
                ))}
              </div>
            </div>
          )}
        </div>
      )}
    </div>
  </article>
</Layout>